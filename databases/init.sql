-- MySQL Script generated by MySQL Workbench
-- Wed May  8 16:24:54 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema JGallego$Fondos
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema JGallego$Fondos
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `JGallego$Fondos` DEFAULT CHARACTER SET utf8 ;
USE `JGallego$Fondos` ;

-- -----------------------------------------------------
-- Table `JGallego$Fondos`.`Fondo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `JGallego$Fondos`.`Fondo` (
  `NIT` INT NOT NULL,
  `Direccion` VARCHAR(45) NOT NULL,
  `Nombre_legal` VARCHAR(45) NOT NULL,
  `Envio_Gratuito` TINYINT NOT NULL,
  `Margen_beneficio` INT NOT NULL,
  `Contacto_principal` JSON NOT NULL,
  PRIMARY KEY (`NIT`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `JGallego$Fondos`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `JGallego$Fondos`.`Usuario` (
  `Cedula` INT NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `Correo` VARCHAR(45) NOT NULL,
  `Numero_telefono` VARCHAR(10) NOT NULL,
  `Estado` ENUM('Activo', 'Inactivo') NOT NULL DEFAULT 'Activo',
  `Tipo_usuario` ENUM('Usuario', 'Admin') NOT NULL DEFAULT 'Usuario',
  `Saldo` DECIMAL(10,2) NULL DEFAULT 0,
  `Fondo_NIT` INT NOT NULL,
  PRIMARY KEY (`Cedula`, `Fondo_NIT`),
  INDEX `fk_Usuario_Fondo_idx` (`Fondo_NIT` ASC) VISIBLE,
  CONSTRAINT `fk_Usuario_Fondo`
    FOREIGN KEY (`Fondo_NIT`)
    REFERENCES `JGallego$Fondos`.`Fondo` (`NIT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `JGallego$Fondos`.`Codigo_verificacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `JGallego$Fondos`.`Codigo_verificacion` (
  `Codigo` INT NOT NULL,
  `Fecha_inicio` DATETIME NOT NULL,
  `Fecha_Final` DATETIME NOT NULL,
  `Estado` ENUM('Activo', 'Usado', 'Vencido') NOT NULL DEFAULT 'Activo',
  `Usuario_Cedula` INT NOT NULL,
  PRIMARY KEY (`Codigo`, `Usuario_Cedula`),
  INDEX `fk_Codigo_verificacion_Usuario1_idx` (`Usuario_Cedula` ASC) VISIBLE,
  CONSTRAINT `fk_Codigo_verificacion_Usuario1`
    FOREIGN KEY (`Usuario_Cedula`)
    REFERENCES `JGallego$Fondos`.`Usuario` (`Cedula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `JGallego$Fondos`.`Transaccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `JGallego$Fondos`.`Transaccion` (
  `ID` INT NOT NULL,
  `Productos` JSON NOT NULL,
  `Total_compra` DECIMAL(10,2) NOT NULL,
  `Forma_pago` VARCHAR(45) NOT NULL,
  `Ciudad_envio` VARCHAR(45) NOT NULL,
  `Direccion_envio` VARCHAR(45) NOT NULL,
  `Codigo_verificacion_Codigo` INT NOT NULL,
  PRIMARY KEY (`ID`, `Codigo_verificacion_Codigo`),
  INDEX `fk_Transaccion_Codigo_verificacion1_idx` (`Codigo_verificacion_Codigo` ASC) VISIBLE,
  CONSTRAINT `fk_Transaccion_Codigo_verificacion1`
    FOREIGN KEY (`Codigo_verificacion_Codigo`)
    REFERENCES `JGallego$Fondos`.`Codigo_verificacion` (`Codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `JGallego$Fondos`.`Bono`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `JGallego$Fondos`.`Bono` (
  `idBono` VARCHAR(50) NOT NULL,
  `Saldo` DECIMAL(10,2) NOT NULL,
  `Fecha_Publicacion` DATETIME NOT NULL,
  `Fecha_vencimiento` DATETIME NOT NULL,
  `Info_Bono` VARCHAR(100) NOT NULL,
  `Saldo_eliminado` TINYINT NOT NULL DEFAULT 1,
  `Fecha_actualizacion` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idBono`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `JGallego$Fondos`.`Registro_bono`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `JGallego$Fondos`.`Registro_bono` (
  `Usuario_Cedula` INT NOT NULL,
  `Bono_idBono` VARCHAR(50) NOT NULL,
  `Estado` ENUM('Activo', 'Usado', 'Vencido') NOT NULL,
  `Fecha_Registro` DATETIME NOT NULL,
  `Fecha_Uso` TIMESTAMP NULL,
  PRIMARY KEY (`Usuario_Cedula`, `Bono_idBono`),
  INDEX `fk_Usuario_has_Bono_Usuario1_idx` (`Usuario_Cedula` ASC) VISIBLE,
  INDEX `fk_Registro_bono_Bono1_idx` (`Bono_idBono` ASC) VISIBLE,
  CONSTRAINT `fk_Usuario_has_Bono_Usuario1`
    FOREIGN KEY (`Usuario_Cedula`)
    REFERENCES `JGallego$Fondos`.`Usuario` (`Cedula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Registro_bono_Bono1`
    FOREIGN KEY (`Bono_idBono`)
    REFERENCES `JGallego$Fondos`.`Bono` (`idBono`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `JGallego$Fondos`.`Registro_Movimiento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `JGallego$Fondos`.`Registro_Movimiento` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Tipo_Accion` ENUM('Bono', 'Transaccion', 'Recarga') NOT NULL,
  `Descripcion` VARCHAR(500) NOT NULL,
  `Fecha` DATETIME NOT NULL,
  `Usuario_Cedula` INT NOT NULL,
  PRIMARY KEY (`ID`, `Usuario_Cedula`),
  CONSTRAINT `fk_Registro_Acciones_Usuario1`
    FOREIGN KEY (`Usuario_Cedula`)
    REFERENCES `JGallego$Fondos`.`Usuario` (`Cedula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `JGallego$Fondos`;

DELIMITER $$
USE `JGallego$Fondos`$$
CREATE DEFINER = CURRENT_USER TRIGGER `JGallego$Fondos`.`Bono_BEFORE_UPDATE` BEFORE UPDATE ON `Bono` FOR EACH ROW
BEGIN
    SET NEW.Fecha_actualizacion = CURRENT_TIMESTAMP;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
